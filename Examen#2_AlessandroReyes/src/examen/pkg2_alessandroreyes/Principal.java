package examen.pkg2_alessandroreyes;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import java.util.Random;
import javax.swing.DefaultListModel;

public class Principal extends javax.swing.JFrame {

    public Principal() throws ParseException {
        initComponents();
        
        UClienteAdmi c = new UClienteAdmi("./Cliente.alo");
        c.cargarArchivo();
        clientes = c.getListaCliente();
        
        UMantenimientoAdmi  m = new UMantenimientoAdmi("./Mantenimiento.alo");
        m.cargarArchivo();
        mantenimientos = m.getListaMantenimiento();
        
        ATMAdmi  a = new ATMAdmi("./ATM.alo");
        a.cargarArchivo();
        atms = a.getListaATM();
        //-------------------------------------------------------------------------------------------------------------------
        atms.add(new ATM("Tegucigalpa, Diprova", "2 años", 11911220, 1500, new Date()));
        atms.add(new ATM("Tegucigalpa, Altia", "2 años", 11911229, 1500,new Date()));
        atms.add(new ATM("San Pedro Sula, Altia", "2 años", 11911111, 1500,new Date()));
        atms.add(new ATM("Tegucigalpa, City Mall", "2 años", 11911225, 1500,new Date()));
        atms.add(new ATM("San Pedro Sula, City Mall", "2 años", 11911222, 1500,new Date()));
        
        Date da1, da2, da3;
        SimpleDateFormat fi = new SimpleDateFormat("dd/MM/yyyy");
        da1 = fi.parse("17/10/2000");
        da2 = fi.parse("14/07/2000");
        da3 = fi.parse("18/06/1996");
        clientes.add(new UCliente(11911224, da1, new Date(), "Alessandro", "Giovanni", "Reyes", "1234", "Trimarchi"));
        clientes.add(new UCliente(11841181, da1, new Date(), "Adriana", null, "Parodi", "1234", "Turcios"));
        mantenimientos.add(new UMantenimiento(666666, da3, new Date(), "Alvaro", "Alexandre", "Reyes", "123", "Trimarchi"));
        //-------------------------------------------------------------------------------------------------------------------
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_ATMsLog.setModel(modelo);
        tf_idlog.setVisible(false);
        pf_pwlog.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        btn_login.setVisible(false);
        btn_CrearATM.setVisible(false);
        btn_CrearC.setVisible(false);
        btn_CrearM.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_clientes = new javax.swing.JDialog();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmi_ingresar = new javax.swing.JMenuItem();
        jmi_retirar = new javax.swing.JMenuItem();
        jmi_creacCuenta = new javax.swing.JMenuItem();
        jmi_verEstado = new javax.swing.JMenuItem();
        jmi_verTrans = new javax.swing.JMenuItem();
        jmi_LOcliente = new javax.swing.JMenuItem();
        jd_mantenimientos = new javax.swing.JDialog();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmi_dineroatm = new javax.swing.JMenuItem();
        jmi_LOmantenimiento = new javax.swing.JMenuItem();
        jd_CrearCoM = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jdc_naci = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jdc_afilacion = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        tf_1nom = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tf_2nom = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tf_1apellido = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tf_2apellido = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tf_contra = new javax.swing.JTextField();
        btn_CoMCrear_r = new javax.swing.JButton();
        btn_CoMCrear = new javax.swing.JButton();
        lb_atm = new javax.swing.JLabel();
        cb_atmsCM = new javax.swing.JComboBox<>();
        jd_CrearATM = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        tf_CATM_ubicacion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_CATM_mante = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_CATM_dinero = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btn_CATM_r = new javax.swing.JButton();
        btn_CATM = new javax.swing.JButton();
        jdc_ATMfab = new com.toedter.calendar.JDateChooser();
        jd_ingresarD = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        cb_cliente = new javax.swing.JComboBox<>();
        btn_Accion_r = new javax.swing.JButton();
        btn_factura = new javax.swing.JButton();
        jd_estado = new javax.swing.JDialog();
        jd_transacciones = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_transacciones = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        btn_Transacciones_r = new javax.swing.JButton();
        tf_idlog = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pf_pwlog = new javax.swing.JPasswordField();
        btn_login = new javax.swing.JButton();
        btn_CrearC = new javax.swing.JButton();
        btn_CrearM = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cb_ATMsLog = new javax.swing.JComboBox<>();
        btn_CrearATM = new javax.swing.JButton();

        jMenu1.setText("Acciones");

        jmi_ingresar.setText("Ingresar dinero");
        jmi_ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_ingresarActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_ingresar);

        jmi_retirar.setText("Retirar dinero");
        jmi_retirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_retirarActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_retirar);

        jmi_creacCuenta.setText("Crear nueva Cuenta");
        jmi_creacCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_creacCuentaActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_creacCuenta);

        jmi_verEstado.setText("Estado de una Cuenta");
        jmi_verEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_verEstadoActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_verEstado);

        jmi_verTrans.setText("Transacciones");
        jmi_verTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_verTransActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_verTrans);

        jmi_LOcliente.setText("Log out");
        jmi_LOcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_LOclienteActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_LOcliente);

        jMenuBar1.add(jMenu1);

        jd_clientes.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jd_clientesLayout = new javax.swing.GroupLayout(jd_clientes.getContentPane());
        jd_clientes.getContentPane().setLayout(jd_clientesLayout);
        jd_clientesLayout.setHorizontalGroup(
            jd_clientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        jd_clientesLayout.setVerticalGroup(
            jd_clientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );

        jMenu2.setText("Accion");

        jmi_dineroatm.setText("Ingresar dinero al atm");
        jmi_dineroatm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_dineroatmActionPerformed(evt);
            }
        });
        jMenu2.add(jmi_dineroatm);

        jmi_LOmantenimiento.setText("Log out");
        jmi_LOmantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_LOmantenimientoActionPerformed(evt);
            }
        });
        jMenu2.add(jmi_LOmantenimiento);

        jMenuBar2.add(jMenu2);

        jd_mantenimientos.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout jd_mantenimientosLayout = new javax.swing.GroupLayout(jd_mantenimientos.getContentPane());
        jd_mantenimientos.getContentPane().setLayout(jd_mantenimientosLayout);
        jd_mantenimientosLayout.setHorizontalGroup(
            jd_mantenimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 794, Short.MAX_VALUE)
        );
        jd_mantenimientosLayout.setVerticalGroup(
            jd_mantenimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
        );

        jLabel8.setText("Fecha de nacimiento");

        jLabel9.setText("Año de afilacion");

        jLabel10.setText("Primer Nombre");

        jLabel11.setText("Segundo Nombre");

        jLabel12.setText("Primer apellido");

        jLabel13.setText("Segundo apellido");

        jLabel14.setText("Contraseña que utilizara para ingresar");

        btn_CoMCrear_r.setText("Regresar");
        btn_CoMCrear_r.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CoMCrear_rMouseClicked(evt);
            }
        });

        btn_CoMCrear.setText("Crear cuenta");
        btn_CoMCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CoMCrearMouseClicked(evt);
            }
        });

        lb_atm.setText("Elija los atms que le perteneceran");

        cb_atmsCM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_atmsCMItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jd_CrearCoMLayout = new javax.swing.GroupLayout(jd_CrearCoM.getContentPane());
        jd_CrearCoM.getContentPane().setLayout(jd_CrearCoMLayout);
        jd_CrearCoMLayout.setHorizontalGroup(
            jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearCoMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jdc_afilacion, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                        .addComponent(jdc_naci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(tf_1apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tf_contra, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_atm)
                    .addComponent(jLabel13)
                    .addComponent(tf_1nom)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(tf_2nom)
                    .addComponent(tf_2apellido)
                    .addComponent(cb_atmsCM, 0, 230, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jd_CrearCoMLayout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(btn_CoMCrear_r)
                .addGap(119, 119, 119)
                .addComponent(btn_CoMCrear)
                .addContainerGap(241, Short.MAX_VALUE))
        );
        jd_CrearCoMLayout.setVerticalGroup(
            jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearCoMLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_1nom, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jdc_naci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jdc_afilacion, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(tf_2nom))
                .addGap(58, 58, 58)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_1apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(tf_2apellido))
                .addGap(50, 50, 50)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lb_atm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_atmsCM, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(tf_contra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(jd_CrearCoMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_CoMCrear_r)
                    .addComponent(btn_CoMCrear)))
        );

        jLabel4.setText("Ubicación");

        jLabel5.setText("Cada cuanto se le da mantemininto (EJ: 5 anios):");

        jLabel6.setText("Cuanto dinero contiene el ATM");

        jLabel7.setText("Año en el que se fabrico");

        btn_CATM_r.setText("Regresar");
        btn_CATM_r.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CATM_rMouseClicked(evt);
            }
        });

        btn_CATM.setText("crear ATM");
        btn_CATM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CATMMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_CrearATMLayout = new javax.swing.GroupLayout(jd_CrearATM.getContentPane());
        jd_CrearATM.getContentPane().setLayout(jd_CrearATMLayout);
        jd_CrearATMLayout.setHorizontalGroup(
            jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearATMLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearATMLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(203, 203, 203))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_CrearATMLayout.createSequentialGroup()
                        .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jd_CrearATMLayout.createSequentialGroup()
                                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(tf_CATM_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(tf_CATM_mante, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_CrearATMLayout.createSequentialGroup()
                                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_CATM_r)
                                    .addComponent(tf_CATM_dinero, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jd_CrearATMLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_CATM)
                                        .addGap(199, 199, 199))
                                    .addGroup(jd_CrearATMLayout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(jdc_ATMfab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(39, 39, 39))))
        );
        jd_CrearATMLayout.setVerticalGroup(
            jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearATMLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_CATM_ubicacion, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(tf_CATM_mante))
                .addGap(96, 96, 96)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_CATM_dinero, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jdc_ATMfab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                .addGroup(jd_CrearATMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_CATM_r)
                    .addComponent(btn_CATM)))
        );

        jLabel15.setText("Elija la cuenta");

        cb_cliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cb_cliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_clienteItemStateChanged(evt);
            }
        });

        btn_Accion_r.setText("Regresar");

        btn_factura.setText("Ver factura de la accion realizada");
        btn_factura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_facturaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_ingresarDLayout = new javax.swing.GroupLayout(jd_ingresarD.getContentPane());
        jd_ingresarD.getContentPane().setLayout(jd_ingresarDLayout);
        jd_ingresarDLayout.setHorizontalGroup(
            jd_ingresarDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ingresarDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_ingresarDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_ingresarDLayout.createSequentialGroup()
                        .addComponent(btn_Accion_r, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                        .addComponent(btn_factura))
                    .addGroup(jd_ingresarDLayout.createSequentialGroup()
                        .addGroup(jd_ingresarDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(cb_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jd_ingresarDLayout.setVerticalGroup(
            jd_ingresarDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ingresarDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 452, Short.MAX_VALUE)
                .addGroup(jd_ingresarDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Accion_r)
                    .addComponent(btn_factura)))
        );

        javax.swing.GroupLayout jd_estadoLayout = new javax.swing.GroupLayout(jd_estado.getContentPane());
        jd_estado.getContentPane().setLayout(jd_estadoLayout);
        jd_estadoLayout.setHorizontalGroup(
            jd_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jd_estadoLayout.setVerticalGroup(
            jd_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jl_transacciones.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(jl_transacciones);

        jLabel16.setText("Transacciones hechas");

        btn_Transacciones_r.setText("Regresar");
        btn_Transacciones_r.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_Transacciones_rMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_transaccionesLayout = new javax.swing.GroupLayout(jd_transacciones.getContentPane());
        jd_transacciones.getContentPane().setLayout(jd_transaccionesLayout);
        jd_transaccionesLayout.setHorizontalGroup(
            jd_transaccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_transaccionesLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jd_transaccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(jd_transaccionesLayout.createSequentialGroup()
                .addComponent(btn_Transacciones_r)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_transaccionesLayout.setVerticalGroup(
            jd_transaccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_transaccionesLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btn_Transacciones_r))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID_Cuenta");

        jLabel2.setText("Contraseña");

        btn_login.setText("log in");
        btn_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_loginMouseClicked(evt);
            }
        });

        btn_CrearC.setText("Crear cuenta cliente ");
        btn_CrearC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CrearCMouseClicked(evt);
            }
        });

        btn_CrearM.setText("Crear cuenta mantenimiento");
        btn_CrearM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CrearMMouseClicked(evt);
            }
        });

        jLabel3.setText("Elija el ATM en el que se encuentra");

        cb_ATMsLog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cb_ATMsLog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ATMsLogItemStateChanged(evt);
            }
        });

        btn_CrearATM.setText("Crear ATM");
        btn_CrearATM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CrearATMMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_CrearC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 207, Short.MAX_VALUE)
                .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186)
                .addComponent(btn_CrearM))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pf_pwlog, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(tf_idlog))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cb_ATMsLog, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_CrearATM, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_ATMsLog, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_CrearATM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_idlog, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pf_pwlog, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))
                            .addComponent(btn_CrearM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_CrearC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_loginMouseClicked
        boolean v = false;
        try {
            if (tf_idlog.getText().isEmpty() && pf_pwlog.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese algo");
            } else {
                for (int i = 0; i < clientes.size(); i++) {
                    if (Integer.parseInt(tf_idlog.getText()) == clientes.get(i).getId_Usuario()
                            && pf_pwlog.getText().equals(clientes.get(i).getContraseña())) {
                        v = true;
                        u = true;
                        CIN = clientes.get(i);
                        tf_idlog.setText("");
                        pf_pwlog.setText("");
                        
                        this.setVisible(false);
                        jd_clientes.setModal(true);
                        jd_clientes.pack();
                        jd_clientes.setLocationRelativeTo(this);
                        jd_clientes.setVisible(true);
                        
                        int x = 0;
                        for (int j = 0; j < atms.size(); j++) {
                            if (use.getID_único() == atms.get(j).getID_único()) {
                                x = j;
                                break;
                            }
                        }
                        use.getLogs().add(new Log_Sistema(CIN, "El cliente hizo log in",
                                new Date(), u));
                        atms.get(x).getLogs().add(new Log_Sistema(CIN, "El cliente hizo log in",
                                new Date(), u));

                        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        String st = (df.format(new Date()));
                        int h = new Date().getHours();
                        try {
                            File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                            FileWriter fw = null;
                            BufferedWriter bw = null;
                            try {
                                fw = new FileWriter(archivo, false);
                                bw = new BufferedWriter(fw);
                                bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                                bw.flush();
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                            bw.close();
                            fw.close();
                        } catch (Exception e) {
                        }
                        break;
                    }
                }
                for (int i = 0; i < mantenimientos.size(); i++) {
                    if (Integer.parseInt(tf_idlog.getText()) == mantenimientos.get(i).getId_Usuario()
                            && pf_pwlog.getText().equals(mantenimientos.get(i).getContraseña())) {
                        v = true;
                        u = false;
                        MIN = mantenimientos.get(i);
                        tf_idlog.setText("");
                        pf_pwlog.setText("");
                        
                        this.setVisible(false);
                        jd_mantenimientos.setModal(true);
                        jd_mantenimientos.pack();
                        jd_mantenimientos.setLocationRelativeTo(this);
                        jd_mantenimientos.setVisible(true);
                        
                        int x = 0;
                        for (int j = 0; j < atms.size(); j++) {
                            if (use.getID_único() == atms.get(j).getID_único()) {
                                x = j;
                                break;
                            }
                        }
                        use.getLogs().add(new Log_Sistema(CIN, "El usuario de mantemiento hizo log in",
                                new Date(), u));
                        atms.get(x).getLogs().add(new Log_Sistema(CIN, "El usuario de mantemiento hizo log in",
                                new Date(), u));

                        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        String st = (df.format(new Date()));
                        int h = new Date().getHours();
                        try {
                            File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                            FileWriter fw = null;
                            BufferedWriter bw = null;
                            try {
                                fw = new FileWriter(archivo, false);
                                bw = new BufferedWriter(fw);
                                bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                                bw.flush();
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                            bw.close();
                            fw.close();
                        } catch (Exception e) {
                        }
                        break;
                    }
                }
                
                if (v == false) {
                    JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrecta");
                    contmal++;
                    if (contmal == 5){
                        int x = 0;
                        for (int i = 0; i < atms.size(); i++) {
                            if (use.getID_único() == atms.get(i).getID_único()) {
                                x = i;
                            }
                        }
                        JOptionPane.showMessageDialog(jd_mantenimientos, "Advertencia, ya se ingreso 5 veces malas.");

                        use.getLogs().add(new Log_Sistema("Alguien ingreso 5 veces mal la contraseña o usuario, y se tiro advertencia",
                                new Date()));
                        atms.get(x).getLogs().add(new Log_Sistema("Alguien ingreso 5 veces mal la contraseña o usuario, y se tiro advertencia ",
                                new Date()));
                        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        String st = (df.format(new Date()));
                        try {
                            File archivo = new File("./LogSitema_" + st + ".txt");
                            FileWriter fw = null;
                            BufferedWriter bw = null;
                            try {
                                fw = new FileWriter(archivo, false);
                                bw = new BufferedWriter(fw);
                                bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                                bw.flush();
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                            bw.close();
                            fw.close();
                        } catch (Exception e) {
                        }
                        contmal--;
                    }
                    pf_pwlog.setText("");
                    tf_idlog.setText("");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ocurrio un error");
            pf_pwlog.setText("");
            tf_idlog.setText("");
        }
    }//GEN-LAST:event_btn_loginMouseClicked

    private void jmi_LOmantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_LOmantenimientoActionPerformed
        jd_mantenimientos.setModal(false);
        jd_mantenimientos.setVisible(false);
        this.pack();
        this.setLocationRelativeTo(this);
        this.setVisible(true);
        
        MIN = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_ATMsLog.setModel(modelo);
    }//GEN-LAST:event_jmi_LOmantenimientoActionPerformed

    private void jmi_LOclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_LOclienteActionPerformed
        jd_clientes.setModal(false);
        jd_clientes.setVisible(false);
        this.pack();
        this.setLocationRelativeTo(this);
        this.setVisible(true);
        
        CIN = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_ATMsLog.setModel(modelo);
    }//GEN-LAST:event_jmi_LOclienteActionPerformed

    private void btn_CrearATMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CrearATMMouseClicked
        this.setVisible(false);
        jd_CrearATM.setModal(true);
        jd_CrearATM.pack();
        jd_CrearATM.setLocationRelativeTo(this);
        jd_CrearATM.setVisible(true);
    }//GEN-LAST:event_btn_CrearATMMouseClicked

    private void btn_CATMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CATMMouseClicked
        int n = 1000000+random.nextInt(9000000);
        boolean v = false;
        while(!v){
            for (int i = 0; i < atms.size(); i++) {
                if(atms.get(i).getID_único() == n){
                    n = 1000000+random.nextInt(9000000);
                    break;
                }else if(atms.get(i).getID_único() != n && i == atms.size()-1){
                    v = true;
                    break;
                }
            }
        }

        atms.add(new ATM(tf_CATM_ubicacion.getText(), tf_CATM_mante.getText(), n, Integer.parseInt(tf_CATM_dinero.getText()),
                jdc_ATMfab.getDate()));

        ATMAdmi a = new ATMAdmi("./ATM.alo");
        a.setListaATM(atms);
        a.escribirArchivo();
        JOptionPane.showMessageDialog(jd_CrearATM, "ATM creado con exito.");

        tf_CATM_dinero.setText("");
        tf_CATM_mante.setText("");
        tf_CATM_ubicacion.setText("");
        jdc_ATMfab.setDate(new Date());
    }//GEN-LAST:event_btn_CATMMouseClicked

    private void btn_CATM_rMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CATM_rMouseClicked
        tf_CATM_dinero.setText("");
        tf_CATM_mante.setText("");
        tf_CATM_ubicacion.setText("");
        jdc_ATMfab.setDate(new Date());

        jd_CrearATM.setModal(false);
        jd_CrearATM.setVisible(false);
        this.pack();
        this.setLocationRelativeTo(this);
        this.setVisible(true);
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_ATMsLog.setModel(modelo);
    }//GEN-LAST:event_btn_CATM_rMouseClicked

    private void btn_CrearCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CrearCMouseClicked
        lb_atm.setVisible(false);
        cb_atmsCM.setVisible(false);

        this.setVisible(false);
        jd_CrearCoM.setModal(true);
        jd_CrearCoM.pack();
        jd_CrearCoM.setLocationRelativeTo(this);
        jd_CrearCoM.setVisible(true);
        CoM = true;

    }//GEN-LAST:event_btn_CrearCMouseClicked

    private void btn_CoMCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CoMCrearMouseClicked
        int n = 100000 + random.nextInt(900000);
        boolean v = false;
        while (!v && CoM) {
            for (int i = 0; i < clientes.size(); i++) {
                if (clientes.get(i).getId_Usuario() == n) {
                    n = 1000000 + random.nextInt(9000000);
                    break;
                } else if (clientes.get(i).getId_Usuario() != n && i == clientes.size() - 1) {
                    v = true;
                    break;
                }
            }
        }
        while (!v && !CoM) {
            for (int i = 0; i < mantenimientos.size(); i++) {
                if (mantenimientos.get(i).getId_Usuario() == n) {
                    n = 1000000 + random.nextInt(9000000);
                    break;
                } else if (mantenimientos.get(i).getId_Usuario() != n && i == mantenimientos.size() - 1) {
                    v = true;
                    break;
                }
            }
        }
        if (CoM) {
            clientes.add(new UCliente(n, jdc_naci.getDate(), jdc_afilacion.getDate(), tf_1nom.getText(), tf_2nom.getText(),
                    tf_1apellido.getText(), tf_contra.getText(), tf_2apellido.getText()));

            UClienteAdmi c = new UClienteAdmi("./Cliente.alo");
            c.setListaCliente(clientes);
            c.escribirArchivo();
            JOptionPane.showMessageDialog(jd_CrearATM, "usuario cliente creado con exito.");
        } else if (!CoM) {
            mantenimientos.add(new UMantenimiento(n, jdc_naci.getDate(), jdc_afilacion.getDate(), tf_1nom.getText(),
                    tf_2nom.getText(), tf_1apellido.getText(), tf_contra.getText(), tf_2apellido.getText()));
            mantenimientos.get(mantenimientos.size() - 1).setATMs(Tatms);
            Tatms = new ArrayList();

            UMantenimientoAdmi m = new UMantenimientoAdmi("./Mantenimiento.alo");
            m.setListaMantenimiento(mantenimientos);
            m.escribirArchivo();
            JOptionPane.showMessageDialog(jd_CrearATM, "usuario de mantenimineot creado con exito.");
        }

        tf_1apellido.setText("");
        tf_1nom.setText("");
        tf_2apellido.setText("");
        tf_2nom.setText("");
        tf_contra.setText("");
        jdc_afilacion.setDate(new Date());
        jdc_naci.setDate(new Date());
    }//GEN-LAST:event_btn_CoMCrearMouseClicked

    private void btn_CoMCrear_rMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CoMCrear_rMouseClicked
        tf_1apellido.setText("");
        tf_1nom.setText("");
        tf_2apellido.setText("");
        tf_2nom.setText("");
        tf_contra.setText("");
        jdc_afilacion.setDate(new Date());
        jdc_naci.setDate(new Date());

        jd_CrearCoM.setModal(false);
        jd_CrearCoM.setVisible(false);
        this.pack();
        this.setLocationRelativeTo(this);
        this.setVisible(true);
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_ATMsLog.setModel(modelo);
    }//GEN-LAST:event_btn_CoMCrear_rMouseClicked

    private void btn_CrearMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CrearMMouseClicked
        lb_atm.setVisible(true);
        cb_atmsCM.setVisible(true);
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(atms.toArray());
        cb_atmsCM.setModel(modelo);

        this.setVisible(false);
        jd_CrearCoM.setModal(true);
        jd_CrearCoM.pack();
        jd_CrearCoM.setLocationRelativeTo(this);
        jd_CrearCoM.setVisible(true);
        CoM = false;


    }//GEN-LAST:event_btn_CrearMMouseClicked

    private void jmi_dineroatmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_dineroatmActionPerformed
        int di = Integer.parseInt(JOptionPane.showInputDialog(this, "Cuanto dinero desea ingresar en el ATM: "));
        int x = 0;
        for (int i = 0; i < atms.size(); i++) {
            if (use.getID_único() == atms.get(i).getID_único()) {
                x = i;
            }
        }

        for (int i = 0; i < MIN.getATMs().size(); i++) {
            if (MIN.getATMs().get(i).equals(use)) {
                JOptionPane.showMessageDialog(jd_mantenimientos, "Dinero agregado con exito.");
                use.setDinero_cont(use.getDinero_cont() + di);
                atms.get(x).setDinero_cont(atms.get(x).getDinero_cont() + di);

                use.getLogs().add(new Log_Sistema(MIN, "El usuario de mantimiento agrego dinero al atm",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(MIN, "El usuario de mantimiento agrego dinero al atm ",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
                break;
            } else if (i == MIN.getATMs().size() - 1 && !MIN.getATMs().get(i).equals(use)) {
                JOptionPane.showMessageDialog(jd_mantenimientos, "Error, usted no tiene asignado este ATM.");

                use.getLogs().add(new Log_Sistema(MIN, "El usuario de mantimiento trato de asignar dinero a un ATM que no es de el ",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(MIN, "El usuario de mantimiento trato de asignar dinero a un ATM que no es de el ",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_jmi_dineroatmActionPerformed

    private void jmi_ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_ingresarActionPerformed
        jd_clientes.setModal(false);
        jd_clientes.setVisible(false);
        jd_ingresarD.setModal(true);
        jd_ingresarD.pack();
        jd_ingresarD.setLocationRelativeTo(this);
        jd_ingresarD.setVisible(true);

        RoI = 1;
    }//GEN-LAST:event_jmi_ingresarActionPerformed

    private void jmi_retirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_retirarActionPerformed
        jd_clientes.setModal(false);
        jd_clientes.setVisible(false);
        jd_ingresarD.setModal(true);
        jd_ingresarD.pack();
        jd_ingresarD.setLocationRelativeTo(this);
        jd_ingresarD.setVisible(true);

        RoI = 2;
    }//GEN-LAST:event_jmi_retirarActionPerformed

    private void jmi_creacCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_creacCuentaActionPerformed
        int y = 0;
        for (int i = 0; i < clientes.size(); i++) {
            if (CIN.getId_Usuario() == clientes.get(i).getId_Usuario()) {
                y = i;
            }
        }
        int n = 100000 + random.nextInt(900000);
        boolean v = false;
        while (!v && CoM) {
            for (int i = 0; i < clientes.size(); i++) {
                if (clientes.get(i).getId_Usuario() == n) {
                    n = 1000000 + random.nextInt(9000000);
                    break;
                } else if (clientes.get(i).getId_Usuario() != n && i == clientes.size() - 1) {
                    v = true;
                    break;
                }
            }
        }
        CIN.getCuentas().add(new Cuenta(n, 0, CIN.getId_Usuario()));
        clientes.get(y).getCuentas().add(new Cuenta(n, 0, CIN.getId_Usuario()));
        JOptionPane.showMessageDialog(jd_clientes, "Cuenta hecha con exito, el numero de cuenta es: "
                + CIN.getCuentas().get(CIN.getCuentas().size() - 1).getNumCuenta());

    }//GEN-LAST:event_jmi_creacCuentaActionPerformed

    private void jmi_verEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_verEstadoActionPerformed
        jd_clientes.setModal(false);
        jd_clientes.setVisible(false);
        jd_estado.setModal(true);
        jd_estado.pack();
        jd_estado.setLocationRelativeTo(this);
        jd_estado.setVisible(true);
    }//GEN-LAST:event_jmi_verEstadoActionPerformed

    private void jmi_verTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_verTransActionPerformed
        DefaultListModel modelo = (DefaultListModel) jl_transacciones.getModel();
        for (int i = 0; i < CIN.getTransacciones().size(); i++) {
            modelo.addElement(CIN.getTransacciones().toString());
        }
        jl_transacciones.setModel(modelo);

        jd_clientes.setModal(false);
        jd_clientes.setVisible(false);
        jd_transacciones.setModal(true);
        jd_transacciones.pack();
        jd_transacciones.setLocationRelativeTo(this);
        jd_transacciones.setVisible(true);
    }//GEN-LAST:event_jmi_verTransActionPerformed

    private void btn_Transacciones_rMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Transacciones_rMouseClicked
        DefaultListModel modelo = (DefaultListModel) jl_transacciones.getModel();
        modelo.removeAllElements();
        jl_transacciones.setModel(modelo);

        jd_transacciones.setModal(false);
        jd_transacciones.setVisible(false);
        jd_clientes.setModal(true);
        jd_clientes.pack();
        jd_clientes.setLocationRelativeTo(this);
        jd_clientes.setVisible(true);
    }//GEN-LAST:event_btn_Transacciones_rMouseClicked

    private void cb_clienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_clienteItemStateChanged
        int z = 0;
        for (int i = 0; i < clientes.size(); i++) {
            if (CIN.getId_Usuario() == clientes.get(i).getId_Usuario()) {
                z = i;
            }
        }
        int x = 0, y = 0;
        for (int i = 0; i < atms.size(); i++) {
            if (use.getID_único() == atms.get(i).getID_único()) {
                x = i;
                break;
            }
        }
        for (int i = 0; i < CIN.getCuentas().size(); i++) {
            if (((Cuenta) cb_cliente.getSelectedItem()).getNumCuenta() == CIN.getCuentas().get(i).getNumCuenta()) {
                y = i;
            }
        }

        if (RoI == 1) {
            int di = Integer.parseInt(JOptionPane.showInputDialog(this, "Cuanto dinero desea Ingresar a cuenta"
                    + "\nOpcion #1 100 \nOpcion #2 500 (Ingrese 1 o 2: "));

            if (di == 1) {
                CIN.getCuentas().get(y).setSaldo_disponible(CIN.getCuentas().get(y).getSaldo_disponible() + 100);
                clientes.get(z).getCuentas().get(y).setSaldo_disponible(clientes.get(z).getCuentas().get(y).
                        getSaldo_disponible() + 100);
                use.setDinero_cont(use.getDinero_cont() + 100);
                atms.get(x).setDinero_cont(atms.get(x).getDinero_cont() + 100);
                JOptionPane.showMessageDialog(jd_ingresarD, "Se ingreso el dinero con exito.");

                CIN.getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 100 del atm y de la cuenta.", new Date(), di));
                transacciones.add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 100 del atm y de la cuenta.", new Date(), di));
                clientes.get(z).getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 100 del atm y de la cuenta.", new Date(), di));
                try {
                    File archivo = new File("./Transaccion_" + transacciones.size() + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }

                use.getLogs().add(new Log_Sistema(CIN, "El cliente agrego 100 al atm y a su cuenta",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(CIN, "El cliente agrego 100 al atm y a su cuenta",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
            } else if (di == 2) {
                CIN.getCuentas().get(y).setSaldo_disponible(CIN.getCuentas().get(y).getSaldo_disponible() + 500);
                clientes.get(z).getCuentas().get(y).setSaldo_disponible(clientes.get(z).getCuentas().get(y).
                        getSaldo_disponible() + 500);
                use.setDinero_cont(use.getDinero_cont() + 500);
                atms.get(x).setDinero_cont(atms.get(x).getDinero_cont() + 500);
                JOptionPane.showMessageDialog(jd_ingresarD, "Se ingreso el dinero con exito.");

                CIN.getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 500 del atm y de la cuenta.", new Date(), di));
                transacciones.add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 500 del atm y de la cuenta.", new Date(), di));
                clientes.get(z).getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se agregaron 500 del atm y de la cuenta.", new Date(), di));
                try {
                    File archivo = new File("./Transaccion_" + transacciones.size() + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }

                use.getLogs().add(new Log_Sistema(CIN, "El cliente agrego 500 al atm y a su cuenta",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(CIN, "El cliente agrego 500 al atm y a su cuenta",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
            }
        } else if (RoI == 2) {
            int di = Integer.parseInt(JOptionPane.showInputDialog(this, "Cuanto dinero desea retirar de esta cuenta"
                    + "\nOpcion #1 100 \nOpcion #2 500 (Ingrese 1 o 2: "));

            if (di == 1 && use.getDinero_cont() >= 100 && CIN.getCuentas().get(y).getSaldo_disponible() >= 100) {
                CIN.getCuentas().get(y).setSaldo_disponible(CIN.getCuentas().get(y).getSaldo_disponible() - 100);
                clientes.get(z).getCuentas().get(y).setSaldo_disponible(clientes.get(z).getCuentas().get(y).
                        getSaldo_disponible() - 100);
                use.setDinero_cont(use.getDinero_cont() - 100);
                atms.get(x).setDinero_cont(atms.get(x).getDinero_cont() - 100);
                JOptionPane.showMessageDialog(jd_ingresarD, "Se retiro el dinero con exito.");

                CIN.getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 100 del atm y de la cuenta.", new Date(), di));
                transacciones.add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 100 del atm y de la cuenta.", new Date(), di));
                clientes.get(z).getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 100 del atm y de la cuenta.", new Date(), di));
                try {
                    File archivo = new File("./Transaccion_" + transacciones.size() + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }

                use.getLogs().add(new Log_Sistema(CIN, "El cliente retiro 100 al atm y a su cuenta",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(CIN, "El cliente retiro 100 al atm y a su cuenta",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
            } else if (di == 2 && use.getDinero_cont() >= 500 && CIN.getCuentas().get(y).getSaldo_disponible() >= 500) {
                CIN.getCuentas().get(y).setSaldo_disponible(CIN.getCuentas().get(y).getSaldo_disponible() - 500);
                clientes.get(z).getCuentas().get(y).setSaldo_disponible(clientes.get(z).getCuentas().get(y).
                        getSaldo_disponible() - 500);
                use.setDinero_cont(use.getDinero_cont() - 500);
                atms.get(x).setDinero_cont(atms.get(x).getDinero_cont() - 500);
                JOptionPane.showMessageDialog(jd_ingresarD, "Se retiro el dinero con exito.");

                CIN.getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 500 del atm y de la cuenta.", new Date(), di));
                transacciones.add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 500 del atm y de la cuenta.", new Date(), di));
                clientes.get(z).getTransacciones().add(new Transaccion(CIN.getCuentas().get(y).getNumCuenta(),
                        "Se retiraron 500 del atm y de la cuenta.", new Date(), di));
                try {
                    File archivo = new File("./Transaccion_" + transacciones.size() + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }

                use.getLogs().add(new Log_Sistema(CIN, "El cliente retiro 500 al atm y a su cuenta",
                        new Date(), u));
                atms.get(x).getLogs().add(new Log_Sistema(CIN, "El cliente agrego 500 al atm y a su cuenta",
                        new Date(), u));

                SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                String st = (df.format(new Date()));
                int h = new Date().getHours();
                try {
                    File archivo = new File("./LogSitema_" + st + "_" + h + ".txt");
                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);
                        bw.write(use.getLogs().get(use.getLogs().size() - 1).toString());
                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    bw.close();
                    fw.close();
                } catch (Exception e) {
                }
            } else {
                JOptionPane.showMessageDialog(jd_ingresarD, "El ATM o su cuenta no tiene suficiente dinero para retirar.");
            }
        }
    }//GEN-LAST:event_cb_clienteItemStateChanged

    private void btn_facturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_facturaMouseClicked
        JOptionPane.showMessageDialog(jd_ingresarD, "Factura: \n" + transacciones.get(transacciones.size() - 1).toString());
    }//GEN-LAST:event_btn_facturaMouseClicked

    private void cb_ATMsLogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ATMsLogItemStateChanged
        use = (ATM) cb_ATMsLog.getSelectedItem();
        tf_idlog.setVisible(true);
        pf_pwlog.setVisible(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        btn_login.setVisible(true);
        btn_CrearATM.setVisible(true);
        btn_CrearC.setVisible(true);
        btn_CrearM.setVisible(true);
        System.out.println(use);
        JOptionPane.showMessageDialog(this, "Buen Dia.");
    }//GEN-LAST:event_cb_ATMsLogItemStateChanged

    private void cb_atmsCMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_atmsCMItemStateChanged
        Tatms.add((ATM) cb_atmsCM.getSelectedItem());
    }//GEN-LAST:event_cb_atmsCMItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Accion_r;
    private javax.swing.JButton btn_CATM;
    private javax.swing.JButton btn_CATM_r;
    private javax.swing.JButton btn_CoMCrear;
    private javax.swing.JButton btn_CoMCrear_r;
    private javax.swing.JButton btn_CrearATM;
    private javax.swing.JButton btn_CrearC;
    private javax.swing.JButton btn_CrearM;
    private javax.swing.JButton btn_Transacciones_r;
    private javax.swing.JButton btn_factura;
    private javax.swing.JButton btn_login;
    private javax.swing.JComboBox<String> cb_ATMsLog;
    private javax.swing.JComboBox<String> cb_atmsCM;
    private javax.swing.JComboBox<String> cb_cliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jd_CrearATM;
    private javax.swing.JDialog jd_CrearCoM;
    private javax.swing.JDialog jd_clientes;
    private javax.swing.JDialog jd_estado;
    private javax.swing.JDialog jd_ingresarD;
    private javax.swing.JDialog jd_mantenimientos;
    private javax.swing.JDialog jd_transacciones;
    private com.toedter.calendar.JDateChooser jdc_ATMfab;
    private com.toedter.calendar.JDateChooser jdc_afilacion;
    private com.toedter.calendar.JDateChooser jdc_naci;
    private javax.swing.JList<String> jl_transacciones;
    private javax.swing.JMenuItem jmi_LOcliente;
    private javax.swing.JMenuItem jmi_LOmantenimiento;
    private javax.swing.JMenuItem jmi_creacCuenta;
    private javax.swing.JMenuItem jmi_dineroatm;
    private javax.swing.JMenuItem jmi_ingresar;
    private javax.swing.JMenuItem jmi_retirar;
    private javax.swing.JMenuItem jmi_verEstado;
    private javax.swing.JMenuItem jmi_verTrans;
    private javax.swing.JLabel lb_atm;
    private javax.swing.JPasswordField pf_pwlog;
    private javax.swing.JTextField tf_1apellido;
    private javax.swing.JTextField tf_1nom;
    private javax.swing.JTextField tf_2apellido;
    private javax.swing.JTextField tf_2nom;
    private javax.swing.JTextField tf_CATM_dinero;
    private javax.swing.JTextField tf_CATM_mante;
    private javax.swing.JTextField tf_CATM_ubicacion;
    private javax.swing.JTextField tf_contra;
    private javax.swing.JTextField tf_idlog;
    // End of variables declaration//GEN-END:variables
    ArrayList<ATM> atms = new ArrayList();
    ArrayList<ATM> Tatms = new ArrayList();
    ArrayList<UCliente> clientes = new ArrayList();
    ArrayList<UMantenimiento> mantenimientos = new ArrayList();
    ArrayList<Transaccion> transacciones = new ArrayList();
    ATM use;
    UCliente CIN;
    UMantenimiento MIN;
    boolean u = false;
    Random random = new Random();
    boolean CoM = false; // true = clientes y false = mantenimiento
    int RoI = 0;
    int contmal = 0;
}
